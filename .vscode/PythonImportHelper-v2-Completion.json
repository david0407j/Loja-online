[
    {
        "label": "annotations",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "pformat",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "jmespath",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jmespath",
        "description": "jmespath",
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "exceptions",
        "importPath": "jmespath",
        "description": "jmespath",
        "isExtraImport": true,
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "loja.base.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "loja.base.models",
        "description": "loja.base.models",
        "detail": "loja.base.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "loja.base.models",
        "description": "loja.base.models",
        "isExtraImport": true,
        "detail": "loja.base.models",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "router",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "mommy",
        "importPath": "model_mommy",
        "description": "model_mommy",
        "isExtraImport": true,
        "detail": "model_mommy",
        "documentation": {}
    },
    {
        "label": "mommy",
        "importPath": "model_mommy",
        "description": "model_mommy",
        "isExtraImport": true,
        "detail": "model_mommy",
        "documentation": {}
    },
    {
        "label": "assert_contains",
        "importPath": "loja.django_assertions",
        "description": "loja.django_assertions",
        "isExtraImport": true,
        "detail": "loja.django_assertions",
        "documentation": {}
    },
    {
        "label": "assert_not_contains",
        "importPath": "loja.django_assertions",
        "description": "loja.django_assertions",
        "isExtraImport": true,
        "detail": "loja.django_assertions",
        "documentation": {}
    },
    {
        "label": "assert_contains",
        "importPath": "loja.django_assertions",
        "description": "loja.django_assertions",
        "isExtraImport": true,
        "detail": "loja.django_assertions",
        "documentation": {}
    },
    {
        "label": "assert_contains",
        "importPath": "loja.django_assertions",
        "description": "loja.django_assertions",
        "isExtraImport": true,
        "detail": "loja.django_assertions",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "IS_POPUP_VAR",
        "importPath": "django.contrib.admin.options",
        "description": "django.contrib.admin.options",
        "isExtraImport": true,
        "detail": "django.contrib.admin.options",
        "documentation": {}
    },
    {
        "label": "unquote",
        "importPath": "django.contrib.admin.utils",
        "description": "django.contrib.admin.utils",
        "isExtraImport": true,
        "detail": "django.contrib.admin.utils",
        "documentation": {}
    },
    {
        "label": "update_session_auth_hash",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "AdminPasswordChangeForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "UserChangeForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "PermissionDenied",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "Http404",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "TemplateResponse",
        "importPath": "django.template.response",
        "description": "django.template.response",
        "isExtraImport": true,
        "detail": "django.template.response",
        "documentation": {}
    },
    {
        "label": "method_decorator",
        "importPath": "django.utils.decorators",
        "description": "django.utils.decorators",
        "isExtraImport": true,
        "detail": "django.utils.decorators",
        "documentation": {}
    },
    {
        "label": "escape",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "gettext",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "gettext_lazy",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "gettext_lazy",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "csrf_protect",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "sensitive_post_parameters",
        "importPath": "django.views.decorators.debug",
        "description": "django.views.decorators.debug",
        "isExtraImport": true,
        "detail": "django.views.decorators.debug",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "home",
        "importPath": "loja.base.views",
        "description": "loja.base.views",
        "isExtraImport": true,
        "detail": "loja.base.views",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "loja.modelos",
        "description": "loja.modelos",
        "isExtraImport": true,
        "detail": "loja.modelos",
        "documentation": {}
    },
    {
        "label": "PessoaForm",
        "importPath": "loja.modelos.forms",
        "description": "loja.modelos.forms",
        "isExtraImport": true,
        "detail": "loja.modelos.forms",
        "documentation": {}
    },
    {
        "label": "Pessoa",
        "importPath": "loja.modelos.models",
        "description": "loja.modelos.models",
        "isExtraImport": true,
        "detail": "loja.modelos.models",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "Carrinho",
        "importPath": "loja.produtos.models",
        "description": "loja.produtos.models",
        "isExtraImport": true,
        "detail": "loja.produtos.models",
        "documentation": {}
    },
    {
        "label": "Categoria",
        "importPath": "loja.produtos.models",
        "description": "loja.produtos.models",
        "isExtraImport": true,
        "detail": "loja.produtos.models",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "loja.produtos.models",
        "description": "loja.produtos.models",
        "isExtraImport": true,
        "detail": "loja.produtos.models",
        "documentation": {}
    },
    {
        "label": "Carrinho",
        "importPath": "loja.produtos.models",
        "description": "loja.produtos.models",
        "isExtraImport": true,
        "detail": "loja.produtos.models",
        "documentation": {}
    },
    {
        "label": "CarrinhoItem",
        "importPath": "loja.produtos.models",
        "description": "loja.produtos.models",
        "isExtraImport": true,
        "detail": "loja.produtos.models",
        "documentation": {}
    },
    {
        "label": "Categoria",
        "importPath": "loja.produtos.models",
        "description": "loja.produtos.models",
        "isExtraImport": true,
        "detail": "loja.produtos.models",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "loja.produtos.models",
        "description": "loja.produtos.models",
        "isExtraImport": true,
        "detail": "loja.produtos.models",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "loja.produtos",
        "description": "loja.produtos",
        "isExtraImport": true,
        "detail": "loja.produtos",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "partial",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "dj_database_url",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "dj_database_url",
        "description": "dj_database_url",
        "detail": "dj_database_url",
        "documentation": {}
    },
    {
        "label": "config",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "Csv",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "DjangoIntegration",
        "importPath": "sentry_sdk.integrations.django",
        "description": "sentry_sdk.integrations.django",
        "isExtraImport": true,
        "detail": "sentry_sdk.integrations.django",
        "documentation": {}
    },
    {
        "label": "sentry_sdk",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sentry_sdk",
        "description": "sentry_sdk",
        "detail": "sentry_sdk",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "codecs",
        "description": "codecs",
        "isExtraImport": true,
        "detail": "codecs",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"loja-online\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.11/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"loja-online\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.11/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"loja-online\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.11/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"loja-online\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.11/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV_PROMPT\"]",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV_PROMPT\"] = \"loja-online\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.11/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"../lib/python3.11/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".venv.bin.jp",
        "description": ".venv.bin.jp",
        "peekOfCode": "def main():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('expression')\n    parser.add_argument('-f', '--filename',\n                        help=('The filename containing the input data.  '\n                              'If a filename is not given then data is '\n                              'read from stdin.'))\n    parser.add_argument('--ast', action='store_true',\n                        help=('Pretty print the AST, do not search the data.'))\n    args = parser.parse_args()",
        "detail": ".venv.bin.jp",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "loja.base.migrations.0001_initial",
        "description": "loja.base.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "loja.base.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "resp",
        "kind": 2,
        "importPath": "loja.base.tests.test_login",
        "description": "loja.base.tests.test_login",
        "peekOfCode": "def resp(client, db):\n    return client.get(reverse('login'))\ndef test_login_form_page(resp):\n    assert resp.status_code == 200\n@pytest.fixture\ndef usuario(db, django_user_model):\n    usuario_modelo = mommy.make(django_user_model)\n    senha = 'senha'\n    usuario_modelo.set_password(senha)\n    usuario_modelo.save()",
        "detail": "loja.base.tests.test_login",
        "documentation": {}
    },
    {
        "label": "test_login_form_page",
        "kind": 2,
        "importPath": "loja.base.tests.test_login",
        "description": "loja.base.tests.test_login",
        "peekOfCode": "def test_login_form_page(resp):\n    assert resp.status_code == 200\n@pytest.fixture\ndef usuario(db, django_user_model):\n    usuario_modelo = mommy.make(django_user_model)\n    senha = 'senha'\n    usuario_modelo.set_password(senha)\n    usuario_modelo.save()\n    usuario_modelo.senha_plana = senha\n    return usuario_modelo",
        "detail": "loja.base.tests.test_login",
        "documentation": {}
    },
    {
        "label": "usuario",
        "kind": 2,
        "importPath": "loja.base.tests.test_login",
        "description": "loja.base.tests.test_login",
        "peekOfCode": "def usuario(db, django_user_model):\n    usuario_modelo = mommy.make(django_user_model)\n    senha = 'senha'\n    usuario_modelo.set_password(senha)\n    usuario_modelo.save()\n    usuario_modelo.senha_plana = senha\n    return usuario_modelo\n@pytest.fixture\ndef resp_post(client, usuario):\n    return client.post(reverse('login'), {'username': usuario.email, 'password': usuario.senha_plana})",
        "detail": "loja.base.tests.test_login",
        "documentation": {}
    },
    {
        "label": "resp_post",
        "kind": 2,
        "importPath": "loja.base.tests.test_login",
        "description": "loja.base.tests.test_login",
        "peekOfCode": "def resp_post(client, usuario):\n    return client.post(reverse('login'), {'username': usuario.email, 'password': usuario.senha_plana})\ndef test_login_redirect(resp_post):\n    assert resp_post.status_code == 302\n    assert resp_post.url == reverse('produtos:produtos')\n@pytest.fixture\ndef resp_home(client, db):\n    return client.get(reverse('base:home'))\ndef test_botao_entrar_disponivel(resp_home):\n    assert_contains(resp_home, 'Entrar')",
        "detail": "loja.base.tests.test_login",
        "documentation": {}
    },
    {
        "label": "test_login_redirect",
        "kind": 2,
        "importPath": "loja.base.tests.test_login",
        "description": "loja.base.tests.test_login",
        "peekOfCode": "def test_login_redirect(resp_post):\n    assert resp_post.status_code == 302\n    assert resp_post.url == reverse('produtos:produtos')\n@pytest.fixture\ndef resp_home(client, db):\n    return client.get(reverse('base:home'))\ndef test_botao_entrar_disponivel(resp_home):\n    assert_contains(resp_home, 'Entrar')\ndef test_link_login_disponivel(resp_home):\n    assert_contains(resp_home, reverse('login'))",
        "detail": "loja.base.tests.test_login",
        "documentation": {}
    },
    {
        "label": "resp_home",
        "kind": 2,
        "importPath": "loja.base.tests.test_login",
        "description": "loja.base.tests.test_login",
        "peekOfCode": "def resp_home(client, db):\n    return client.get(reverse('base:home'))\ndef test_botao_entrar_disponivel(resp_home):\n    assert_contains(resp_home, 'Entrar')\ndef test_link_login_disponivel(resp_home):\n    assert_contains(resp_home, reverse('login'))\n@pytest.fixture\ndef resp_home_com_usuario_logado(client_com_usuario_logado, db):\n    return client_com_usuario_logado.get(reverse('base:home'))\ndef test_botao_entrar_indisponivel(resp_home_com_usuario_logado):",
        "detail": "loja.base.tests.test_login",
        "documentation": {}
    },
    {
        "label": "test_botao_entrar_disponivel",
        "kind": 2,
        "importPath": "loja.base.tests.test_login",
        "description": "loja.base.tests.test_login",
        "peekOfCode": "def test_botao_entrar_disponivel(resp_home):\n    assert_contains(resp_home, 'Entrar')\ndef test_link_login_disponivel(resp_home):\n    assert_contains(resp_home, reverse('login'))\n@pytest.fixture\ndef resp_home_com_usuario_logado(client_com_usuario_logado, db):\n    return client_com_usuario_logado.get(reverse('base:home'))\ndef test_botao_entrar_indisponivel(resp_home_com_usuario_logado):\n    assert_not_contains(resp_home_com_usuario_logado, 'Entrar')\ndef test_link_login_indisponivel(resp_home_com_usuario_logado):",
        "detail": "loja.base.tests.test_login",
        "documentation": {}
    },
    {
        "label": "test_link_login_disponivel",
        "kind": 2,
        "importPath": "loja.base.tests.test_login",
        "description": "loja.base.tests.test_login",
        "peekOfCode": "def test_link_login_disponivel(resp_home):\n    assert_contains(resp_home, reverse('login'))\n@pytest.fixture\ndef resp_home_com_usuario_logado(client_com_usuario_logado, db):\n    return client_com_usuario_logado.get(reverse('base:home'))\ndef test_botao_entrar_indisponivel(resp_home_com_usuario_logado):\n    assert_not_contains(resp_home_com_usuario_logado, 'Entrar')\ndef test_link_login_indisponivel(resp_home_com_usuario_logado):\n    assert_not_contains(resp_home_com_usuario_logado, reverse('login'))\ndef test_botao_sair_disponivel(resp_home_com_usuario_logado):",
        "detail": "loja.base.tests.test_login",
        "documentation": {}
    },
    {
        "label": "resp_home_com_usuario_logado",
        "kind": 2,
        "importPath": "loja.base.tests.test_login",
        "description": "loja.base.tests.test_login",
        "peekOfCode": "def resp_home_com_usuario_logado(client_com_usuario_logado, db):\n    return client_com_usuario_logado.get(reverse('base:home'))\ndef test_botao_entrar_indisponivel(resp_home_com_usuario_logado):\n    assert_not_contains(resp_home_com_usuario_logado, 'Entrar')\ndef test_link_login_indisponivel(resp_home_com_usuario_logado):\n    assert_not_contains(resp_home_com_usuario_logado, reverse('login'))\ndef test_botao_sair_disponivel(resp_home_com_usuario_logado):\n    assert_contains(resp_home_com_usuario_logado, 'Sair')\ndef test_nome_usuario_logado_disponivel(resp_home_com_usuario_logado, usuario_logado):\n    assert_contains(resp_home_com_usuario_logado, usuario_logado.first_name)",
        "detail": "loja.base.tests.test_login",
        "documentation": {}
    },
    {
        "label": "test_botao_entrar_indisponivel",
        "kind": 2,
        "importPath": "loja.base.tests.test_login",
        "description": "loja.base.tests.test_login",
        "peekOfCode": "def test_botao_entrar_indisponivel(resp_home_com_usuario_logado):\n    assert_not_contains(resp_home_com_usuario_logado, 'Entrar')\ndef test_link_login_indisponivel(resp_home_com_usuario_logado):\n    assert_not_contains(resp_home_com_usuario_logado, reverse('login'))\ndef test_botao_sair_disponivel(resp_home_com_usuario_logado):\n    assert_contains(resp_home_com_usuario_logado, 'Sair')\ndef test_nome_usuario_logado_disponivel(resp_home_com_usuario_logado, usuario_logado):\n    assert_contains(resp_home_com_usuario_logado, usuario_logado.first_name)\ndef test_link_logout_disponivel(resp_home_com_usuario_logado):\n    assert_contains(resp_home_com_usuario_logado, reverse('logout'))",
        "detail": "loja.base.tests.test_login",
        "documentation": {}
    },
    {
        "label": "test_link_login_indisponivel",
        "kind": 2,
        "importPath": "loja.base.tests.test_login",
        "description": "loja.base.tests.test_login",
        "peekOfCode": "def test_link_login_indisponivel(resp_home_com_usuario_logado):\n    assert_not_contains(resp_home_com_usuario_logado, reverse('login'))\ndef test_botao_sair_disponivel(resp_home_com_usuario_logado):\n    assert_contains(resp_home_com_usuario_logado, 'Sair')\ndef test_nome_usuario_logado_disponivel(resp_home_com_usuario_logado, usuario_logado):\n    assert_contains(resp_home_com_usuario_logado, usuario_logado.first_name)\ndef test_link_logout_disponivel(resp_home_com_usuario_logado):\n    assert_contains(resp_home_com_usuario_logado, reverse('logout'))",
        "detail": "loja.base.tests.test_login",
        "documentation": {}
    },
    {
        "label": "test_botao_sair_disponivel",
        "kind": 2,
        "importPath": "loja.base.tests.test_login",
        "description": "loja.base.tests.test_login",
        "peekOfCode": "def test_botao_sair_disponivel(resp_home_com_usuario_logado):\n    assert_contains(resp_home_com_usuario_logado, 'Sair')\ndef test_nome_usuario_logado_disponivel(resp_home_com_usuario_logado, usuario_logado):\n    assert_contains(resp_home_com_usuario_logado, usuario_logado.first_name)\ndef test_link_logout_disponivel(resp_home_com_usuario_logado):\n    assert_contains(resp_home_com_usuario_logado, reverse('logout'))",
        "detail": "loja.base.tests.test_login",
        "documentation": {}
    },
    {
        "label": "test_nome_usuario_logado_disponivel",
        "kind": 2,
        "importPath": "loja.base.tests.test_login",
        "description": "loja.base.tests.test_login",
        "peekOfCode": "def test_nome_usuario_logado_disponivel(resp_home_com_usuario_logado, usuario_logado):\n    assert_contains(resp_home_com_usuario_logado, usuario_logado.first_name)\ndef test_link_logout_disponivel(resp_home_com_usuario_logado):\n    assert_contains(resp_home_com_usuario_logado, reverse('logout'))",
        "detail": "loja.base.tests.test_login",
        "documentation": {}
    },
    {
        "label": "test_link_logout_disponivel",
        "kind": 2,
        "importPath": "loja.base.tests.test_login",
        "description": "loja.base.tests.test_login",
        "peekOfCode": "def test_link_logout_disponivel(resp_home_com_usuario_logado):\n    assert_contains(resp_home_com_usuario_logado, reverse('logout'))",
        "detail": "loja.base.tests.test_login",
        "documentation": {}
    },
    {
        "label": "resp",
        "kind": 2,
        "importPath": "loja.base.tests.tests_home",
        "description": "loja.base.tests.tests_home",
        "peekOfCode": "def resp(client):\n   resp = client.get(reverse('base:home'))\n   return resp\ndef test_status_code(resp):\n    assert resp.status_code == 200\ndef test_title(resp):\n   assert_contains(resp, '<title>Reizinho-imports- home</title>')\ndef test_home_link(resp):\n   assert_contains(resp, f'href=\"{reverse(\"base:home\")}\">Reizinho-importe</a>')\ndef test_conteudo_link(resp):",
        "detail": "loja.base.tests.tests_home",
        "documentation": {}
    },
    {
        "label": "test_status_code",
        "kind": 2,
        "importPath": "loja.base.tests.tests_home",
        "description": "loja.base.tests.tests_home",
        "peekOfCode": "def test_status_code(resp):\n    assert resp.status_code == 200\ndef test_title(resp):\n   assert_contains(resp, '<title>Reizinho-imports- home</title>')\ndef test_home_link(resp):\n   assert_contains(resp, f'href=\"{reverse(\"base:home\")}\">Reizinho-importe</a>')\ndef test_conteudo_link(resp):\n    assert_contains(resp, 'href=\"http://127.0.0.1:8000/aperitivos/masculino\"')\ndef test_email(resp):\n   assert_contains(resp, 'reizinhomp@gmail.com')",
        "detail": "loja.base.tests.tests_home",
        "documentation": {}
    },
    {
        "label": "test_title",
        "kind": 2,
        "importPath": "loja.base.tests.tests_home",
        "description": "loja.base.tests.tests_home",
        "peekOfCode": "def test_title(resp):\n   assert_contains(resp, '<title>Reizinho-imports- home</title>')\ndef test_home_link(resp):\n   assert_contains(resp, f'href=\"{reverse(\"base:home\")}\">Reizinho-importe</a>')\ndef test_conteudo_link(resp):\n    assert_contains(resp, 'href=\"http://127.0.0.1:8000/aperitivos/masculino\"')\ndef test_email(resp):\n   assert_contains(resp, 'reizinhomp@gmail.com')\ndef test_conteudo_link_infatil(resp):\n    assert_contains(resp, 'href=\"http://127.0.0.1:8000/modelos/femenina\"')",
        "detail": "loja.base.tests.tests_home",
        "documentation": {}
    },
    {
        "label": "test_home_link",
        "kind": 2,
        "importPath": "loja.base.tests.tests_home",
        "description": "loja.base.tests.tests_home",
        "peekOfCode": "def test_home_link(resp):\n   assert_contains(resp, f'href=\"{reverse(\"base:home\")}\">Reizinho-importe</a>')\ndef test_conteudo_link(resp):\n    assert_contains(resp, 'href=\"http://127.0.0.1:8000/aperitivos/masculino\"')\ndef test_email(resp):\n   assert_contains(resp, 'reizinhomp@gmail.com')\ndef test_conteudo_link_infatil(resp):\n    assert_contains(resp, 'href=\"http://127.0.0.1:8000/modelos/femenina\"')\ndef test_conteudo_link(resp):\n    assert_contains(resp, 'href=\"http://127.0.0.1:8000/produtos/outros\"')",
        "detail": "loja.base.tests.tests_home",
        "documentation": {}
    },
    {
        "label": "test_conteudo_link",
        "kind": 2,
        "importPath": "loja.base.tests.tests_home",
        "description": "loja.base.tests.tests_home",
        "peekOfCode": "def test_conteudo_link(resp):\n    assert_contains(resp, 'href=\"http://127.0.0.1:8000/aperitivos/masculino\"')\ndef test_email(resp):\n   assert_contains(resp, 'reizinhomp@gmail.com')\ndef test_conteudo_link_infatil(resp):\n    assert_contains(resp, 'href=\"http://127.0.0.1:8000/modelos/femenina\"')\ndef test_conteudo_link(resp):\n    assert_contains(resp, 'href=\"http://127.0.0.1:8000/produtos/outros\"')",
        "detail": "loja.base.tests.tests_home",
        "documentation": {}
    },
    {
        "label": "test_email",
        "kind": 2,
        "importPath": "loja.base.tests.tests_home",
        "description": "loja.base.tests.tests_home",
        "peekOfCode": "def test_email(resp):\n   assert_contains(resp, 'reizinhomp@gmail.com')\ndef test_conteudo_link_infatil(resp):\n    assert_contains(resp, 'href=\"http://127.0.0.1:8000/modelos/femenina\"')\ndef test_conteudo_link(resp):\n    assert_contains(resp, 'href=\"http://127.0.0.1:8000/produtos/outros\"')",
        "detail": "loja.base.tests.tests_home",
        "documentation": {}
    },
    {
        "label": "test_conteudo_link_infatil",
        "kind": 2,
        "importPath": "loja.base.tests.tests_home",
        "description": "loja.base.tests.tests_home",
        "peekOfCode": "def test_conteudo_link_infatil(resp):\n    assert_contains(resp, 'href=\"http://127.0.0.1:8000/modelos/femenina\"')\ndef test_conteudo_link(resp):\n    assert_contains(resp, 'href=\"http://127.0.0.1:8000/produtos/outros\"')",
        "detail": "loja.base.tests.tests_home",
        "documentation": {}
    },
    {
        "label": "test_conteudo_link",
        "kind": 2,
        "importPath": "loja.base.tests.tests_home",
        "description": "loja.base.tests.tests_home",
        "peekOfCode": "def test_conteudo_link(resp):\n    assert_contains(resp, 'href=\"http://127.0.0.1:8000/produtos/outros\"')",
        "detail": "loja.base.tests.tests_home",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "kind": 6,
        "importPath": "loja.base.admin",
        "description": "loja.base.admin",
        "peekOfCode": "class UserAdmin(admin.ModelAdmin):\n    add_form_template = \"admin/auth/user/add_form.html\"\n    change_user_password_template = None\n    fieldsets = (\n        (None, {\"fields\": (\"first_name\", \"email\", \"password\")}),\n        (\n            _(\"Permissions\"),\n            {\n                \"fields\": (\n                    \"is_active\",",
        "detail": "loja.base.admin",
        "documentation": {}
    },
    {
        "label": "csrf_protect_m",
        "kind": 5,
        "importPath": "loja.base.admin",
        "description": "loja.base.admin",
        "peekOfCode": "csrf_protect_m = method_decorator(csrf_protect)\nsensitive_post_parameters_m = method_decorator(sensitive_post_parameters())\n@admin.register(User)\nclass UserAdmin(admin.ModelAdmin):\n    add_form_template = \"admin/auth/user/add_form.html\"\n    change_user_password_template = None\n    fieldsets = (\n        (None, {\"fields\": (\"first_name\", \"email\", \"password\")}),\n        (\n            _(\"Permissions\"),",
        "detail": "loja.base.admin",
        "documentation": {}
    },
    {
        "label": "sensitive_post_parameters_m",
        "kind": 5,
        "importPath": "loja.base.admin",
        "description": "loja.base.admin",
        "peekOfCode": "sensitive_post_parameters_m = method_decorator(sensitive_post_parameters())\n@admin.register(User)\nclass UserAdmin(admin.ModelAdmin):\n    add_form_template = \"admin/auth/user/add_form.html\"\n    change_user_password_template = None\n    fieldsets = (\n        (None, {\"fields\": (\"first_name\", \"email\", \"password\")}),\n        (\n            _(\"Permissions\"),\n            {",
        "detail": "loja.base.admin",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "loja.base.models",
        "description": "loja.base.models",
        "peekOfCode": "class UserManager(BaseUserManager):\n    use_in_migrations = True\n    def _create_user(self, email, password, **extra_fields):\n        \"\"\"\n        Create and save a user with the given email, and password.\n        \"\"\"\n        if not email:\n            raise ValueError('The given email must be set')\n        email = self.normalize_email(email)\n        user = self.model(email=email, **extra_fields)",
        "detail": "loja.base.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "loja.base.models",
        "description": "loja.base.models",
        "peekOfCode": "class User(AbstractBaseUser, PermissionsMixin):\n    \"\"\"\n    app base User class\n    Email and password are required. Other fields are optional.\n    \"\"\"\n    first_name = models.CharField(_(\"first name\"), max_length=150, blank=True)\n    email = models.EmailField(_(\"email address\"), unique=True)\n    is_staff = models.BooleanField(\n        _(\"staff status\"),\n        default=False,",
        "detail": "loja.base.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "loja.base.urls",
        "description": "loja.base.urls",
        "peekOfCode": "app_name = 'base'\nurlpatterns = [\n    path('', home, name='home'),\n]",
        "detail": "loja.base.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "loja.base.urls",
        "description": "loja.base.urls",
        "peekOfCode": "urlpatterns = [\n    path('', home, name='home'),\n]",
        "detail": "loja.base.urls",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "loja.base.views",
        "description": "loja.base.views",
        "peekOfCode": "def home(request):\n    return render(request, 'base/home.html')",
        "detail": "loja.base.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "loja.modelos.migrations.0001_initial",
        "description": "loja.modelos.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Pessoa',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nome', models.CharField(max_length=30, unique=True)),",
        "detail": "loja.modelos.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "loja.modelos.migrations.0002_pessoa_senha",
        "description": "loja.modelos.migrations.0002_pessoa_senha",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('modelos', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='pessoa',\n            name='senha',\n            field=models.CharField(default=1, max_length=128),\n            preserve_default=False,",
        "detail": "loja.modelos.migrations.0002_pessoa_senha",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "loja.modelos.migrations.0003_pessoa_confirmar_senha",
        "description": "loja.modelos.migrations.0003_pessoa_confirmar_senha",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('modelos', '0002_pessoa_senha'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='pessoa',\n            name='confirmar_senha',\n            field=models.CharField(default=1, max_length=128),\n            preserve_default=False,",
        "detail": "loja.modelos.migrations.0003_pessoa_confirmar_senha",
        "documentation": {}
    },
    {
        "label": "PessoaAdmin",
        "kind": 6,
        "importPath": "loja.modelos.admin",
        "description": "loja.modelos.admin",
        "peekOfCode": "class PessoaAdmin(admin.ModelAdmin):\n    list_display = ('nome', 'data_nascimento', 'email', 'telefone', 'celular', 'cor_favorita', 'comida_favorita')\n    search_fields = ('nome', 'email')\n    list_filter = ('cor_favorita', 'comida_favorita')\n    ordering = ('nome',)\n    fieldsets = (\n        (None, {\n            'fields': ('nome', 'data_nascimento', 'email', 'senha')\n        }),\n        ('Contato', {",
        "detail": "loja.modelos.admin",
        "documentation": {}
    },
    {
        "label": "PessoaForm",
        "kind": 6,
        "importPath": "loja.modelos.forms",
        "description": "loja.modelos.forms",
        "peekOfCode": "class PessoaForm(forms.ModelForm): \n    class Meta:\n        model = Pessoa\n        fields = '__all__'",
        "detail": "loja.modelos.forms",
        "documentation": {}
    },
    {
        "label": "Pessoa",
        "kind": 6,
        "importPath": "loja.modelos.models",
        "description": "loja.modelos.models",
        "peekOfCode": "class Pessoa(models.Model):\n    nome = models.CharField(max_length=30, unique=True)\n    data_nascimento = models.DateField(blank=True, null=True)\n    email = models.EmailField(blank=True, null=True)\n    senha = models.CharField(max_length=128)\n    confirmar_senha = models.CharField(max_length=128)\n    telefone = models.CharField(max_length=11, blank=True, null=True)\n    celular = models.CharField(max_length=11, blank=True, null=True)\n    cor_favorita = models.CharField(max_length=30, blank=True, null=True)\n    comida_favorita = models.CharField(max_length=30, blank=True, null=True)",
        "detail": "loja.modelos.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "loja.modelos.urls",
        "description": "loja.modelos.urls",
        "peekOfCode": "app_name = 'modelos'\nurlpatterns = [\n    path('', views.index),\n    path('update/<int:pessoa_id>/', views.update, name='update_pessoa')\n]",
        "detail": "loja.modelos.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "loja.modelos.urls",
        "description": "loja.modelos.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.index),\n    path('update/<int:pessoa_id>/', views.update, name='update_pessoa')\n]",
        "detail": "loja.modelos.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "loja.modelos.views",
        "description": "loja.modelos.views",
        "peekOfCode": "def index(request):\n    if request.method == 'GET':\n        pessoas = Pessoa.objects.all()\n        form = PessoaForm()\n        context = {\n            'pessoas': pessoas,\n            'form': form,\n        }\n        return render(request, 'modelos/index.html', context)\n    elif request.method == 'POST':",
        "detail": "loja.modelos.views",
        "documentation": {}
    },
    {
        "label": "update",
        "kind": 2,
        "importPath": "loja.modelos.views",
        "description": "loja.modelos.views",
        "peekOfCode": "def update(request, pessoa_id):\n    if request.method == 'GET':\n        pessoas = Pessoa.objects.all()\n        pessoa = Pessoa.objects.filter(id=pessoa_id).first()\n        form = PessoaForm(instance=pessoa)\n        context = {\n            'pessoas': pessoas,\n            'form': form,\n        }\n        return render(request, 'modelos/index.html', context)",
        "detail": "loja.modelos.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "loja.produtos.migrations.0001_initial",
        "description": "loja.produtos.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Categoria',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "loja.produtos.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "loja.produtos.migrations.0002_pessoa",
        "description": "loja.produtos.migrations.0002_pessoa",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('produtos', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Pessoa',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nome', models.CharField(max_length=100)),",
        "detail": "loja.produtos.migrations.0002_pessoa",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "loja.produtos.migrations.0003_delete_pessoa",
        "description": "loja.produtos.migrations.0003_delete_pessoa",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('produtos', '0002_pessoa'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='Pessoa',\n        ),\n    ]",
        "detail": "loja.produtos.migrations.0003_delete_pessoa",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "loja.produtos.migrations.0004_cliente",
        "description": "loja.produtos.migrations.0004_cliente",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('produtos', '0003_delete_pessoa'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Cliente',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nome', models.CharField(max_length=100)),",
        "detail": "loja.produtos.migrations.0004_cliente",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "loja.produtos.migrations.0005_delete_cliente",
        "description": "loja.produtos.migrations.0005_delete_cliente",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('produtos', '0004_cliente'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='Cliente',\n        ),\n    ]",
        "detail": "loja.produtos.migrations.0005_delete_cliente",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "loja.produtos.migrations.0006_pessoa",
        "description": "loja.produtos.migrations.0006_pessoa",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('produtos', '0005_delete_cliente'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Pessoa',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nome', models.CharField(max_length=30, unique=True)),",
        "detail": "loja.produtos.migrations.0006_pessoa",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "loja.produtos.migrations.0007_delete_pessoa",
        "description": "loja.produtos.migrations.0007_delete_pessoa",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('produtos', '0006_pessoa'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='Pessoa',\n        ),\n    ]",
        "detail": "loja.produtos.migrations.0007_delete_pessoa",
        "documentation": {}
    },
    {
        "label": "resp",
        "kind": 2,
        "importPath": "loja.produtos.tests.tests_unissexo",
        "description": "loja.produtos.tests.tests_unissexo",
        "peekOfCode": "def resp(client, db):\n    return client.get(reverse('prudotos:masculino', args=('masculino',)))\ndef test_titulo_masculino(resp):\n   assert_contains(resp, 'masculino' )\ndef test_status_code(resp):\n    assert resp.status_code == 200\ndef test_Produtos_Carrinho(resp):\n   assert_contains(resp, 'Produtos importados' )",
        "detail": "loja.produtos.tests.tests_unissexo",
        "documentation": {}
    },
    {
        "label": "test_titulo_masculino",
        "kind": 2,
        "importPath": "loja.produtos.tests.tests_unissexo",
        "description": "loja.produtos.tests.tests_unissexo",
        "peekOfCode": "def test_titulo_masculino(resp):\n   assert_contains(resp, 'masculino' )\ndef test_status_code(resp):\n    assert resp.status_code == 200\ndef test_Produtos_Carrinho(resp):\n   assert_contains(resp, 'Produtos importados' )",
        "detail": "loja.produtos.tests.tests_unissexo",
        "documentation": {}
    },
    {
        "label": "test_status_code",
        "kind": 2,
        "importPath": "loja.produtos.tests.tests_unissexo",
        "description": "loja.produtos.tests.tests_unissexo",
        "peekOfCode": "def test_status_code(resp):\n    assert resp.status_code == 200\ndef test_Produtos_Carrinho(resp):\n   assert_contains(resp, 'Produtos importados' )",
        "detail": "loja.produtos.tests.tests_unissexo",
        "documentation": {}
    },
    {
        "label": "test_Produtos_Carrinho",
        "kind": 2,
        "importPath": "loja.produtos.tests.tests_unissexo",
        "description": "loja.produtos.tests.tests_unissexo",
        "peekOfCode": "def test_Produtos_Carrinho(resp):\n   assert_contains(resp, 'Produtos importados' )",
        "detail": "loja.produtos.tests.tests_unissexo",
        "documentation": {}
    },
    {
        "label": "Categoria",
        "kind": 6,
        "importPath": "loja.produtos.models",
        "description": "loja.produtos.models",
        "peekOfCode": "class Categoria(models.Model):\n    nome = models.CharField(max_length=32, unique=True)\n    imagem = models.ImageField(upload_to='img_categoria/', blank=True, null=True)\n    def __str__(self):\n        return f'{self.nome}'\nclass Produto(models.Model):\n    TAMANHO_CHOICES = [\n        ('P', 'Pequeno'),\n        ('M', 'Médio'),\n        ('G', 'Grande'),",
        "detail": "loja.produtos.models",
        "documentation": {}
    },
    {
        "label": "Produto",
        "kind": 6,
        "importPath": "loja.produtos.models",
        "description": "loja.produtos.models",
        "peekOfCode": "class Produto(models.Model):\n    TAMANHO_CHOICES = [\n        ('P', 'Pequeno'),\n        ('M', 'Médio'),\n        ('G', 'Grande'),\n        ('GG', 'Extra Grande'),\n        ('ACS', 'Acessório'),\n        ('35', '35'),\n        ('36', '36'),\n        ('37', '37'),",
        "detail": "loja.produtos.models",
        "documentation": {}
    },
    {
        "label": "Carrinho",
        "kind": 6,
        "importPath": "loja.produtos.models",
        "description": "loja.produtos.models",
        "peekOfCode": "class Carrinho(models.Model):\n    user = models.ForeignKey(get_user_model(), on_delete=models.CASCADE)\n    produtos = models.ManyToManyField(Produto, through='CarrinhoItem')\n    def __str__(self):\n        produtos = [item.descricao for item in self.produtos.all()]\n        return f'{self.user.id}: ({produtos})'\nclass CarrinhoItem(models.Model):\n    produto = models.ForeignKey(Produto, on_delete=models.CASCADE)\n    carrinho = models.ForeignKey(Carrinho, on_delete=models.CASCADE)\n    quantidade = models.IntegerField(default=1)",
        "detail": "loja.produtos.models",
        "documentation": {}
    },
    {
        "label": "CarrinhoItem",
        "kind": 6,
        "importPath": "loja.produtos.models",
        "description": "loja.produtos.models",
        "peekOfCode": "class CarrinhoItem(models.Model):\n    produto = models.ForeignKey(Produto, on_delete=models.CASCADE)\n    carrinho = models.ForeignKey(Carrinho, on_delete=models.CASCADE)\n    quantidade = models.IntegerField(default=1)\n    @property\n    def total_item(self):\n        return self.quantidade * self.produto.valor",
        "detail": "loja.produtos.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "loja.produtos.urls",
        "description": "loja.produtos.urls",
        "peekOfCode": "app_name = 'produtos'\nurlpatterns = [\n    path('meucarrinho', views.meu_carrinho),\n    path('meucarrinho/adicionar/<int:produto_id>', views.adicionar_no_carrinho, name='carrinho.adicionar'),\n    path('<str:nome_categoria>', views.produto_alguma_coisa, name='produto'),\n    path('carrinho/remover/<int:produto_id>/', views.remover_do_carrinho, name='carrinho.remover'),\n    path('meucarrinho/excluir/<item_id>/', views.excluir_item, name='carrinho.excluir'),\n    path('meucarrinho/compra/finalizar', views.finalizar_compra_whatsapp, name=\"carrinho.finalizar.compra\"),\n    path('adicionar/<int:produto_id>/', views.adicionar_no_carrinho, name='adicionar_no_carrinho'),\n]",
        "detail": "loja.produtos.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "loja.produtos.urls",
        "description": "loja.produtos.urls",
        "peekOfCode": "urlpatterns = [\n    path('meucarrinho', views.meu_carrinho),\n    path('meucarrinho/adicionar/<int:produto_id>', views.adicionar_no_carrinho, name='carrinho.adicionar'),\n    path('<str:nome_categoria>', views.produto_alguma_coisa, name='produto'),\n    path('carrinho/remover/<int:produto_id>/', views.remover_do_carrinho, name='carrinho.remover'),\n    path('meucarrinho/excluir/<item_id>/', views.excluir_item, name='carrinho.excluir'),\n    path('meucarrinho/compra/finalizar', views.finalizar_compra_whatsapp, name=\"carrinho.finalizar.compra\"),\n    path('adicionar/<int:produto_id>/', views.adicionar_no_carrinho, name='adicionar_no_carrinho'),\n]",
        "detail": "loja.produtos.urls",
        "documentation": {}
    },
    {
        "label": "produto_alguma_coisa",
        "kind": 2,
        "importPath": "loja.produtos.views",
        "description": "loja.produtos.views",
        "peekOfCode": "def produto_alguma_coisa(request, nome_categoria):\n    categoria = Categoria.objects.filter(nome__iexact=nome_categoria).first()\n    if not categoria:\n        categorias_validas = [c.nome for c in Categoria.objects.all()]\n        raise Exception(f\"Categoria '{nome_categoria}' nao encontrada. Utilize uma das {categorias_validas}\")\n    produtos_da_categoria = Produto.objects.filter(categoria_id=categoria.id)\n    context={\n        'camisetas': produtos_da_categoria,\n        'categoria': categoria,\n    }",
        "detail": "loja.produtos.views",
        "documentation": {}
    },
    {
        "label": "meu_carrinho",
        "kind": 2,
        "importPath": "loja.produtos.views",
        "description": "loja.produtos.views",
        "peekOfCode": "def meu_carrinho(request):\n    meu_carrinho = Carrinho.objects.filter(user=request.user).first()\n    if not meu_carrinho:\n        meu_carrinho = Carrinho.objects.create(user=request.user)\n    return render(request, 'produtos/meu_carrinho.html', context={'meu_carrinho': meu_carrinho})\ndef obter_total_carrinho(items_do_carrinho):\n    return sum([item.total_item for item in items_do_carrinho])\ndef adicionar_no_carrinho(request, produto_id: int):\n    carrinho = CarrinhoItem.objects.filter(carrinho__user=request.user)\n    tamanho = request.POST.get('tamanho')",
        "detail": "loja.produtos.views",
        "documentation": {}
    },
    {
        "label": "obter_total_carrinho",
        "kind": 2,
        "importPath": "loja.produtos.views",
        "description": "loja.produtos.views",
        "peekOfCode": "def obter_total_carrinho(items_do_carrinho):\n    return sum([item.total_item for item in items_do_carrinho])\ndef adicionar_no_carrinho(request, produto_id: int):\n    carrinho = CarrinhoItem.objects.filter(carrinho__user=request.user)\n    tamanho = request.POST.get('tamanho')\n    meu_carrinho = Carrinho.objects.filter(user=request.user).first()\n    if not meu_carrinho:\n        meu_carrinho = Carrinho.objects.create(user=request.user)\n    produto = Produto.objects.get(id=produto_id)\n    item_existente = CarrinhoItem.objects.filter(carrinho=meu_carrinho, produto=produto).first()",
        "detail": "loja.produtos.views",
        "documentation": {}
    },
    {
        "label": "adicionar_no_carrinho",
        "kind": 2,
        "importPath": "loja.produtos.views",
        "description": "loja.produtos.views",
        "peekOfCode": "def adicionar_no_carrinho(request, produto_id: int):\n    carrinho = CarrinhoItem.objects.filter(carrinho__user=request.user)\n    tamanho = request.POST.get('tamanho')\n    meu_carrinho = Carrinho.objects.filter(user=request.user).first()\n    if not meu_carrinho:\n        meu_carrinho = Carrinho.objects.create(user=request.user)\n    produto = Produto.objects.get(id=produto_id)\n    item_existente = CarrinhoItem.objects.filter(carrinho=meu_carrinho, produto=produto).first()\n    if not item_existente:\n        item_existente = CarrinhoItem(produto=produto, quantidade=0, carrinho=meu_carrinho)",
        "detail": "loja.produtos.views",
        "documentation": {}
    },
    {
        "label": "excluir_item",
        "kind": 2,
        "importPath": "loja.produtos.views",
        "description": "loja.produtos.views",
        "peekOfCode": "def excluir_item(request, item_id: int):\n    carrinho = CarrinhoItem.objects.filter(carrinho__user=request.user)\n    total_compra = sum(item.total_item for item in carrinho)\n    meu_carrinho = Carrinho.objects.filter(user=request.user).first()\n    try:\n        #produto = Produto.objects.get(id=produto_id)\n        CarrinhoItem.objects.get(id=item_id).delete()\n        # TODO: remover este DRY\n        context={\n            'meu_carrinho': meu_carrinho,",
        "detail": "loja.produtos.views",
        "documentation": {}
    },
    {
        "label": "remover_do_carrinho",
        "kind": 2,
        "importPath": "loja.produtos.views",
        "description": "loja.produtos.views",
        "peekOfCode": "def remover_do_carrinho(request, produto_id: int):\n    carrinho = CarrinhoItem.objects.filter(carrinho__user=request.user)\n    total_compra = sum([item.total_item for item in carrinho])\n    meu_carrinho = Carrinho.objects.filter(user=request.user).first()\n    produto = Produto.objects.get(id=produto_id)\n    item_existente = CarrinhoItem.objects.filter(carrinho=meu_carrinho, produto=produto).first()\n    if item_existente:\n        item_existente.quantidade -= 1\n        item_existente.save()\n        if item_existente.quantidade == 0:",
        "detail": "loja.produtos.views",
        "documentation": {}
    },
    {
        "label": "calcular_total_carrinho",
        "kind": 2,
        "importPath": "loja.produtos.views",
        "description": "loja.produtos.views",
        "peekOfCode": "def calcular_total_carrinho(request):\n    carrinho = CarrinhoItem.objects.filter(carrinho__user=request.user)\n    total_compra = sum(item.total_item for item in carrinho)\n    return render(request, 'produtos/meu_carrinho.html', {'carrinho': carrinho, 'total_compra': total_compra})\ndef finalizar_compra_whatsapp(request):\n    meu_carrinho = Carrinho.objects.filter(user=request.user).first()\n    items_carrinho = CarrinhoItem.objects.filter(carrinho=meu_carrinho).order_by(\"-id\")\n    total_compra = obter_total_carrinho(items_carrinho)\n    produtos_texto = \"\\n\".join([f\"  {item.quantidade} x {item.produto.nome}* ({item.produto.descricao}) - Tamanho: {item.produto.tamanho}, Preço R${item.produto.valor},\" for item in items_carrinho])\n    texto_final = \"Olá!\\nGostaria de finalizar a compra. Aqui está a lista de produtos que quero adquirir:\\n\"",
        "detail": "loja.produtos.views",
        "documentation": {}
    },
    {
        "label": "finalizar_compra_whatsapp",
        "kind": 2,
        "importPath": "loja.produtos.views",
        "description": "loja.produtos.views",
        "peekOfCode": "def finalizar_compra_whatsapp(request):\n    meu_carrinho = Carrinho.objects.filter(user=request.user).first()\n    items_carrinho = CarrinhoItem.objects.filter(carrinho=meu_carrinho).order_by(\"-id\")\n    total_compra = obter_total_carrinho(items_carrinho)\n    produtos_texto = \"\\n\".join([f\"  {item.quantidade} x {item.produto.nome}* ({item.produto.descricao}) - Tamanho: {item.produto.tamanho}, Preço R${item.produto.valor},\" for item in items_carrinho])\n    texto_final = \"Olá!\\nGostaria de finalizar a compra. Aqui está a lista de produtos que quero adquirir:\\n\"\n    texto_final += produtos_texto\n    texto_final += f\"\\nTotal da compra: R${total_compra}\\n\" \n    tamanho_da_camiseta = request.POST.get('Rezinho_Imports')\n    texto_final += f\"\\n REZINHO IMPORTS!{tamanho_da_camiseta}\"",
        "detail": "loja.produtos.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "loja.asgi",
        "description": "loja.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "loja.asgi",
        "documentation": {}
    },
    {
        "label": "usuario_logado",
        "kind": 2,
        "importPath": "loja.conftest",
        "description": "loja.conftest",
        "peekOfCode": "def usuario_logado(db, django_user_model):\n    usuario_modelo = mommy.make(django_user_model, first_name='Teste Nome')\n    return usuario_modelo\n@pytest.fixture\ndef client_com_usuario_logado(usuario_logado, client):\n    client.force_login(usuario_logado)\n    return client",
        "detail": "loja.conftest",
        "documentation": {}
    },
    {
        "label": "client_com_usuario_logado",
        "kind": 2,
        "importPath": "loja.conftest",
        "description": "loja.conftest",
        "peekOfCode": "def client_com_usuario_logado(usuario_logado, client):\n    client.force_login(usuario_logado)\n    return client",
        "detail": "loja.conftest",
        "documentation": {}
    },
    {
        "label": "_test_case",
        "kind": 5,
        "importPath": "loja.django_assertions",
        "description": "loja.django_assertions",
        "peekOfCode": "_test_case = TestCase()\nassert_contains = _test_case.assertContains\nassert_not_contains = _test_case.assertNotContains",
        "detail": "loja.django_assertions",
        "documentation": {}
    },
    {
        "label": "assert_contains",
        "kind": 5,
        "importPath": "loja.django_assertions",
        "description": "loja.django_assertions",
        "peekOfCode": "assert_contains = _test_case.assertContains\nassert_not_contains = _test_case.assertNotContains",
        "detail": "loja.django_assertions",
        "documentation": {}
    },
    {
        "label": "assert_not_contains",
        "kind": 5,
        "importPath": "loja.django_assertions",
        "description": "loja.django_assertions",
        "peekOfCode": "assert_not_contains = _test_case.assertNotContains",
        "detail": "loja.django_assertions",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = config('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = config('DEBUG', cast=bool)\nALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())\nAUTH_USER_MODEL = 'base.User'\nLOGIN_URL = '/contas/login/'",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "SECRET_KEY = config('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = config('DEBUG', cast=bool)\nALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())\nAUTH_USER_MODEL = 'base.User'\nLOGIN_URL = '/contas/login/'\nLOGIN_REDIRECT_URL = '/base/'\nLOGOUT_REDIRECT_URL = '/'\n# Application definition\nINSTALLED_APPS = [",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "DEBUG = config('DEBUG', cast=bool)\nALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())\nAUTH_USER_MODEL = 'base.User'\nLOGIN_URL = '/contas/login/'\nLOGIN_REDIRECT_URL = '/base/'\nLOGOUT_REDIRECT_URL = '/'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())\nAUTH_USER_MODEL = 'base.User'\nLOGIN_URL = '/contas/login/'\nLOGIN_REDIRECT_URL = '/base/'\nLOGOUT_REDIRECT_URL = '/'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'base.User'\nLOGIN_URL = '/contas/login/'\nLOGIN_REDIRECT_URL = '/base/'\nLOGOUT_REDIRECT_URL = '/'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_URL",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "LOGIN_URL = '/contas/login/'\nLOGIN_REDIRECT_URL = '/base/'\nLOGOUT_REDIRECT_URL = '/'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "LOGIN_REDIRECT_URL = '/base/'\nLOGOUT_REDIRECT_URL = '/'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "LOGOUT_REDIRECT_URL",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "LOGOUT_REDIRECT_URL = '/'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'collectfast',",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'collectfast',\n    'loja.base',\n    'loja.produtos',",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'loja.urls'",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "ROOT_URLCONF = 'loja.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "AUTHENTICATION_BACKENDS",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "AUTHENTICATION_BACKENDS = [\n    'django.contrib.auth.backends.ModelBackend',\n]\n# configuração Debug Tollbar\nINTERNAL_IPS = config('INTERNAL_IPS', cast=Csv(), default='127.0.0.1')\nif DEBUG:\n    INSTALLED_APPS.append('debug_toolbar')\n    MIDDLEWARE.insert(0, 'debug_toolbar.middleware.DebugToolbarMiddleware')\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "INTERNAL_IPS = config('INTERNAL_IPS', cast=Csv(), default='127.0.0.1')\nif DEBUG:\n    INSTALLED_APPS.append('debug_toolbar')\n    MIDDLEWARE.insert(0, 'debug_toolbar.middleware.DebugToolbarMiddleware')\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\ndefault_db_url = 'sqlite:///' + os.path.join(BASE_DIR, 'db.sqlite3')\nparse_database = partial(dj_database_url.parse, conn_max_age=600)\nDATABASES = {\n    'default': config('DATABASE_URL', default=default_db_url, cast=parse_database)",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "default_db_url",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "default_db_url = 'sqlite:///' + os.path.join(BASE_DIR, 'db.sqlite3')\nparse_database = partial(dj_database_url.parse, conn_max_age=600)\nDATABASES = {\n    'default': config('DATABASE_URL', default=default_db_url, cast=parse_database)\n}\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "parse_database",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "parse_database = partial(dj_database_url.parse, conn_max_age=600)\nDATABASES = {\n    'default': config('DATABASE_URL', default=default_db_url, cast=parse_database)\n}\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "DATABASES = {\n    'default': config('DATABASE_URL', default=default_db_url, cast=parse_database)\n}\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "LANGUAGE_CODE = 'pt-br'\nTIME_ZONE = 'America/Sao_Paulo'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\n# configuração de ambiente de desenvolvimento\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "TIME_ZONE = 'America/Sao_Paulo'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\n# configuração de ambiente de desenvolvimento\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\n# configuração de ambiente de desenvolvimento\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\n# configuração de ambiente de desenvolvimento\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')\nAWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID', default=None)",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\n# configuração de ambiente de desenvolvimento\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')\nAWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID', default=None)\nCOLLECTFAST_ENABLED = False",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')\nAWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID', default=None)\nCOLLECTFAST_ENABLED = False\n# STORAGE CONFIGURATION IN S3 AWS\n# ------------------------------------------------------------------------------\nif AWS_ACCESS_KEY_ID:\n    AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY')",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')\nAWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID', default=None)\nCOLLECTFAST_ENABLED = False\n# STORAGE CONFIGURATION IN S3 AWS\n# ------------------------------------------------------------------------------\nif AWS_ACCESS_KEY_ID:\n    AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY')\n    AWS_STORAGE_BUCKET_NAME = config('AWS_STORAGE_BUCKET_NAME')",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')\nAWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID', default=None)\nCOLLECTFAST_ENABLED = False\n# STORAGE CONFIGURATION IN S3 AWS\n# ------------------------------------------------------------------------------\nif AWS_ACCESS_KEY_ID:\n    AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY')\n    AWS_STORAGE_BUCKET_NAME = config('AWS_STORAGE_BUCKET_NAME')\n    AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400', }",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')\nAWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID', default=None)\nCOLLECTFAST_ENABLED = False\n# STORAGE CONFIGURATION IN S3 AWS\n# ------------------------------------------------------------------------------\nif AWS_ACCESS_KEY_ID:\n    AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY')\n    AWS_STORAGE_BUCKET_NAME = config('AWS_STORAGE_BUCKET_NAME')\n    AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400', }\n    AWS_PRELOAD_METADATA = True",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "AWS_ACCESS_KEY_ID",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "AWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID', default=None)\nCOLLECTFAST_ENABLED = False\n# STORAGE CONFIGURATION IN S3 AWS\n# ------------------------------------------------------------------------------\nif AWS_ACCESS_KEY_ID:\n    AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY')\n    AWS_STORAGE_BUCKET_NAME = config('AWS_STORAGE_BUCKET_NAME')\n    AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400', }\n    AWS_PRELOAD_METADATA = True\n    AWS_AUTO_CREATE_BUCKET = False",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "COLLECTFAST_ENABLED",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "COLLECTFAST_ENABLED = False\n# STORAGE CONFIGURATION IN S3 AWS\n# ------------------------------------------------------------------------------\nif AWS_ACCESS_KEY_ID:\n    AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY')\n    AWS_STORAGE_BUCKET_NAME = config('AWS_STORAGE_BUCKET_NAME')\n    AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400', }\n    AWS_PRELOAD_METADATA = True\n    AWS_AUTO_CREATE_BUCKET = False\n    AWS_QUERYSTRING_AUTH = True",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\nSENTRY_DSN = config('SENTRY_DSN', default=None)\nif SENTRY_DSN:\n    sentry_sdk.init(dsn=SENTRY_DSN, integrations=[DjangoIntegration()])",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "SECURE_PROXY_SSL_HEADER",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\nSENTRY_DSN = config('SENTRY_DSN', default=None)\nif SENTRY_DSN:\n    sentry_sdk.init(dsn=SENTRY_DSN, integrations=[DjangoIntegration()])",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "SENTRY_DSN",
        "kind": 5,
        "importPath": "loja.settings",
        "description": "loja.settings",
        "peekOfCode": "SENTRY_DSN = config('SENTRY_DSN', default=None)\nif SENTRY_DSN:\n    sentry_sdk.init(dsn=SENTRY_DSN, integrations=[DjangoIntegration()])",
        "detail": "loja.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "loja.urls",
        "description": "loja.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include('loja.base.urls')),\n    path('produtos/', include('loja.produtos.urls')),\n    path('contas/', include('django.contrib.auth.urls')),\n    path('admin/', admin.site.urls),  \n    path('contas/', include('django.contrib.auth.urls')),\n    path('base/', include('loja.base.urls')),\n    path('register/', register, name='register'),\n     path('modelos/', include('loja.modelos.urls')),\n] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "loja.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "loja.wsgi",
        "description": "loja.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "loja.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'loja.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]